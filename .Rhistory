select(metric_name, mav, mav_nat)
if (nrow(filtered_data_pancreatic) == 0) {
stop("No data available after removing missing values. Check your filters or data.")
}
unique(Indicators_trust$trust_name)
unique(Indicators_trust$quarter_year)
unique(Indicators_trust$metric_name)
Indicators_trust %>%
filter(
trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
quarter_year == "Q1-2020",
grepl("Pancreatic Cancer", metric_name, ignore.case = TRUE)
) %>%
summarise(
total_rows = n(),
missing_mav = sum(is.na(mav)),
missing_mav_nat = sum(is.na(mav_nat))
)
Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust")) %>%
select(quarter_year, metric_name, mav, mav_nat) %>%
head(20)  # View the first 20 rows
Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
grepl("Pancreatic Cancer", metric_name, ignore.case = TRUE)) %>%
select(quarter_year, metric_name, mav, mav_nat) %>%
head(20)
# Filter data for "Manchester University NHS Foundation Trust" for Pancreatic Cancer in 2022 Q3
filtered_data_pancreatic_2022 <- Indicators_trust %>%
filter(
trust_name == "Manchester University NHS Foundation Trust",
quarter_year == "Q3-2022",
grepl("Pancreatic Cancer", metric_name, ignore.case = TRUE)
) %>%
drop_na(mav, mav_nat)  # Remove rows with missing values in mav or mav_nat
# Filter data for "Manchester University NHS Foundation Trust" for Pancreatic Cancer in 2022 Q3
filtered_data_pancreatic_2022 <- Indicators_trust %>%
filter(
trust_name == "Manchester University NHS Foundation Trust",
quarter_year == "Q3-2022",
grepl("Pancreatic Cancer", metric_name, ignore.case = TRUE)
)  # Remove rows with missing values in mav or mav_nat
# Check if any rows remain after filtering
if (nrow(filtered_data_pancreatic_2022) == 0) {
stop("No data available for Manchester University NHS Foundation Trust in 2022 Q3 for Pancreatic Cancer. Check your filters or data.")
}
filtered_data_pancreatic_2022 <- Indicators_trust %>%
filter(
trust_name == "Manchester University NHS Foundation Trust",
quarter_year == "Q3-2022",
grepl("NPaCA", metric_name, ignore.case = TRUE)
)
# Check if any rows remain after filtering
if (nrow(filtered_data_pancreatic_2022) == 0) {
stop("No data available for Manchester University NHS Foundation Trust in 2022 Q3 for Pancreatic Cancer. Check your filters or data.")
}
filtered_data_nkca <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NPaCA") %>%
select(audit, quarter_year, metric_name, pact, mav, lcl, ucl, mav_nat) %>%
standardize_pact()  # Apply scaling as needed
# Create a side-by-side bar chart comparing Trust MAV and National MAV for the filtered data
ggplot(filtered_data_pancreatic_2022, aes(x = metric_name)) +
geom_bar(aes(y = mav, fill = "Trust MAV"), stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
geom_bar(aes(y = mav_nat, fill = "National MAV"), stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
labs(
title = "Comparison of Trust MAV and National MAV (Pancreatic Cancer - 2022 Q3)",
x = "Performance Indicator",
y = "Moving Average (MAV)",
fill = "Legend"
) +
scale_fill_manual(values = c("Trust MAV" = "steelblue", "National MAV" = "firebrick")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # Rotate and adjust x-axis labels
legend.position = "bottom"
) +
coord_flip()  # Flip coordinates for better readability
filtered_data_nkca <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NKCA") %>%
select(audit, quarter_year, metric_name, pact, mav, lcl, ucl, mav_nat) %>%
standardize_pact()  # Apply scaling as needed
# Filter data for "Manchester University NHS Foundation Trust" for Pancreatic Cancer in 2022 Q3
filtered_data_pancreatic_2022 <- Indicators_trust %>%
filter(
trust_name %in% c("Manchester University NHS Foundation Trust"),  # Use appropriate trust name
quarter_year == "Q3-2022",
audit == "NPaCA"
) %>%
select(audit, quarter_year, metric_name, pact, mav, lcl, ucl, mav_nat) %>%
standardize_pact()  # Apply scaling if needed
# Check if any rows remain after filtering
if (nrow(filtered_data_pancreatic_2022) == 0) {
stop("No data available for Manchester University NHS Foundation Trust in 2022 Q3 for Pancreatic Cancer. Check your filters or data.")
}
# Create a side-by-side bar chart comparing Trust MAV and National MAV for the filtered data
ggplot(filtered_data_pancreatic_2022, aes(x = metric_name)) +
geom_bar(aes(y = mav, fill = "Trust MAV"), stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
geom_bar(aes(y = mav_nat, fill = "National MAV"), stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
labs(
title = "Comparison of Trust MAV and National MAV (Pancreatic Cancer - 2022 Q3)",
x = "Performance Indicator",
y = "Moving Average (MAV)",
fill = "Legend"
) +
scale_fill_manual(values = c("Trust MAV" = "steelblue", "National MAV" = "firebrick")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # Rotate and adjust x-axis labels
legend.position = "bottom"
) +
coord_flip()  # Flip coordinates for better readability
# Filter data for "Manchester University NHS Foundation Trust" for Pancreatic Cancer in 2022 Q3
filtered_data_pancreatic_2022 <- Indicators_trust %>%
filter(
trust_name %in% c("Manchester University NHS Foundation Trust"),  # Use appropriate trust name
quarter_year == "Q3-2022",
audit == "NPaCA"
) %>%
select(audit, quarter_year, metric_name, pact, mav, lcl, ucl, mav_nat) %>%
standardize_pact()  # Apply scaling if needed
ggplot(filtered_data_pancreatic_2022, aes(x = metric_name)) +
geom_bar(aes(y = mav, fill = "Trust MAV"), stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
geom_bar(aes(y = mav_nat, fill = "National MAV"), stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
labs(
title = "Comparison of Trust MAV and National MAV (Pancreatic Cancer - 2022 Q3)",
x = "Performance Indicator",
y = "Moving Average (MAV)",
fill = "Legend"
) +
scale_fill_manual(values = c("Trust MAV" = "steelblue", "National MAV" = "firebrick")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # Rotate and adjust x-axis labels
legend.position = "bottom"
)
ggplot(filtered_data_pancreatic_2022, aes(x = metric_name, group = metric_name)) +
geom_bar(aes(y = mav, fill = "Trust MAV"), stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
geom_bar(aes(y = mav_nat, fill = "National MAV"), stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
labs(
title = "Comparison of Trust MAV and National MAV (Pancreatic Cancer - 2022 Q3)",
x = "Performance Indicator",
y = "Moving Average (MAV)",
fill = "Legend"
) +
scale_fill_manual(values = c("Trust MAV" = "blue", "National MAV" = "red")) +  # Set custom colors
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # Rotate and adjust x-axis labels
legend.position = "bottom",
axis.ticks.x = element_blank()  # Remove x-axis ticks
) +
facet_wrap(~metric_name, scales = "free_x", ncol = 1) +  # Create a new panel for each performance indicator
theme(
strip.text = element_text(size = 10),  # Adjust size of the facet labels
panel.spacing = unit(2, "lines")  # Add space between facets
)
ggplot(filtered_data_pancreatic_2022_long, aes(x = metric_name, y = mav_value, fill = data_type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
labs(
title = "Comparison of Trust MAV and National MAV (Pancreatic Cancer - 2022 Q3)",
x = "Performance Indicator",
y = "Moving Average (MAV)",
fill = "Legend"
) +
scale_fill_manual(values = c("Trust MAV" = "blue", "National MAV" = "red")) +  # Set custom colors
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # Rotate and adjust x-axis labels
legend.position = "bottom",
axis.ticks.x = element_blank(),  # Remove x-axis ticks
panel.spacing = unit(1, "lines")  # Adjust space between groups
) +
scale_x_discrete(expand = c(0.1, 0.1))  # Add space between the groups
filtered_data_pancreatic_2022_long <- filtered_data_pancreatic_2022 %>%
gather(key = "data_type", value = "mav_value", mav, mav_nat) %>%
mutate(data_type = recode(data_type, mav = "Trust MAV", mav_nat = "National MAV"))
# Reshape the data to long format for easier plotting
filtered_data_pancreatic_2022_long <- filtered_data_pancreatic_2022 %>%
gather(key = "data_type", value = "mav_value", mav, mav_nat) %>%
mutate(data_type = recode(data_type, mav = "Trust MAV", mav_nat = "National MAV"))
library(tidyr)
# Reshape the data to long format for easier plotting
filtered_data_pancreatic_2022_long <- filtered_data_pancreatic_2022 %>%
gather(key = "data_type", value = "mav_value", mav, mav_nat) %>%
mutate(data_type = recode(data_type, mav = "Trust MAV", mav_nat = "National MAV"))
# Create dual bar chart with side-by-side bars and gaps between groups
ggplot(filtered_data_pancreatic_2022_long, aes(x = metric_name, y = mav_value, fill = data_type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
scale_fill_manual(values = c("Trust MAV" = "blue", "National MAV" = "red")) +  # Set custom colors
labs(
title = "Comparison of Trust MAV and National MAV (Pancreatic Cancer - 2022 Q3)",
x = "Performance Indicator",
y = "Moving Average (MAV)",
fill = "Legend"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate and adjust x-axis labels
legend.position = "bottom"
) +
scale_x_discrete(expand = c(0.2, 0.2))  # Add space between the groups
filtered_data_pancreatic_2022 <- Indicators_trust %>%
filter(
trust_name == "Manchester University NHS Foundation Trust",  # Use appropriate trust name
quarter_year == "Q3-2022",
audit == "NPaCA"
) %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
standardize_pact()  # Apply scaling if needed
# Function to check and standardize pact values (if needed)
standardize_pact <- function(df) {
max_pact <- max(df$pact, na.rm = TRUE)
if (max_pact > 1 && max_pact <= 100) {
# If max value is between 1 and 100, scale down to 0-1
df$pact <- df$pact / 100
}
return(df)
}
# Reshape the data to long format for easier plotting
filtered_data_pancreatic_2022_long <- filtered_data_pancreatic_2022 %>%
gather(key = "data_type", value = "mav_value", mav, mav_nat) %>%
mutate(data_type = recode(data_type, mav = "Trust MAV", mav_nat = "National MAV"))
# Create dual bar chart with side-by-side bars and gaps between groups
ggplot(filtered_data_pancreatic_2022_long, aes(x = metric_name, y = mav_value, fill = data_type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
scale_fill_manual(values = c("Trust MAV" = "blue", "National MAV" = "red")) +  # Set custom colors
labs(
title = "Comparison of Trust MAV and National MAV (Pancreatic Cancer - 2022 Q3)",
x = "Performance Indicator",
y = "Moving Average (MAV)",
fill = "Legend"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate and adjust x-axis labels
legend.position = "bottom"
) +
scale_x_discrete(expand = c(0.2, 0.2))  # Add space between the groups
filtered_data_pancreatic_2022 <- Indicators_trust %>%
filter(
trust_name == "Manchester University NHS Foundation Trust",  # Use appropriate trust name
quarter_year == "Q3-2022",
audit == "NPaCA"
) %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
standardize_pact()  # Apply scaling if needed
# Function to check and standardize pact values (if needed)
standardize_pact <- function(df) {
max_pact <- max(df$pact, na.rm = TRUE)
if (max_pact > 1 && max_pact <= 100) {
# If max value is between 1 and 100, scale down to 0-1
df$pact <- df$pact / 100
}
return(df)
}
# Reshape the data to long format for easier plotting
filtered_data_pancreatic_2022_long <- filtered_data_pancreatic_2022 %>%
gather(key = "data_type", value = "mav_value", mav, mav_nat) %>%
mutate(data_type = recode(data_type, mav = "Trust MAV", mav_nat = "National MAV"))
# Create dual bar chart with side-by-side bars and gaps between groups
ggplot(filtered_data_pancreatic_2022_long, aes(x = metric_name, y = mav_value, fill = data_type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.4) +
scale_fill_manual(values = c("Trust MAV" = "blue", "National MAV" = "red")) +  # Set custom colors
labs(
title = "Comparison of Trust MAV and National MAV (Pancreatic Cancer - 2022 Q3)",
x = "Performance Indicator",
y = "Moving Average (MAV)",
fill = "Legend"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate and adjust x-axis labels
legend.position = "bottom"
) +
scale_x_discrete(expand = c(0.2, 0.2))  # Add space between the groups
load("C:/Users/matth/Downloads/fev1.csv")
load("C:/Users/matth/Downloads/fev1.csv")
fev1 <- read.csv("C:/Users/matth/Downloads/fev1.csv")
View(fev1)
plot(age, fev1, data = fev1)
View(fev1)
plot(fev1.FEV1~fev1.age)
library(ggplot)
library(ggplot2)
plot(fev1$FEV1~fev1$age)
set.seed(10)
fev1_sampled <- fev1 %>%
count(id) %>%
filter(n > 6) %>%
slice_sample(n = 20) %>%
select(id) %>%
inner_join(fev1)
ggplot(fev1, aes(x = age, y = FEV1, color = metric_name)) +
geom_point() +
geom_line(aes(group = metric_name)) +
theme_minimal() +
labs(title = "FEV1 Over Age",
x = "Age",
y = "FEV1",
color = "Performance Indicator") +
scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +  # Force y-axis from 0% to 100%
theme(legend.position = "bottom")  # Move legend to the bottom for better space usage
ggplot(fev1, aes(x = age, y = FEV1, color = metric_name)) +
geom_point() +
geom_line(aes(group = metric_name)) +
theme_minimal() +
labs(title = "FEV1 Over Age",
x = "Age",
y = "FEV1",
color = "Performance Indicator")
library(dplyr)
library(ggplot2)
# Filter data for NKCA (Kidney Cancer) for Guy's and St Thomas' NHS Foundation Trust
traffic_light_data <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NKCA") %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
mutate(relative_score = mav / mav_nat,  # Calculate relative score
traffic_light = case_when(
relative_score >= 0.9 & relative_score <= 1.1 ~ "Yellow",
relative_score > 1.1 ~ "Green",
relative_score < 0.9 ~ "Red"
))
# Traffic light plot for multiple performance indicators (stacked vertically)
ggplot(traffic_light_data, aes(x = quarter_year, y = relative_score, color = traffic_light)) +
geom_point(size = 3) +
scale_color_manual(values = c("Red" = "red", "Yellow" = "yellow", "Green" = "green")) +  # Assign custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
legend.position = "bottom",  # Place legend at bottom
legend.title = element_blank()) +  # Remove legend title
labs(title = "Traffic Light Plot for Guy's and St Thomas' NHS Foundation Trust (NKCA)",
x = "Quarter Year",
y = "Relative Score (MAV / MAV_NAT)") +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +  # Show as percentage, starting at 0
facet_grid(metric_name ~ ., scales = "free_y")  # Stack plots vertically by metric_name
# Filter data for NAoPri (Primary Breast Cancer) for Guy's and St Thomas' NHS Foundation Trust
traffic_light_data <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NAoPri") %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
mutate(relative_score = mav / mav_nat,  # Calculate relative score
traffic_light = case_when(
relative_score >= 0.9 & relative_score <= 1.1 ~ "Yellow",
relative_score > 1.1 ~ "Green",
relative_score < 0.9 ~ "Red"
))
# Traffic light plot for multiple performance indicators (stacked vertically) for NAoPri
ggplot(traffic_light_data, aes(x = quarter_year, y = relative_score, color = traffic_light)) +
geom_point(size = 3) +
scale_color_manual(values = c("Red" = "red", "Yellow" = "yellow", "Green" = "green")) +  # Assign custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
legend.position = "bottom",  # Place legend at bottom
legend.title = element_blank()) +  # Remove legend title
labs(title = "Traffic Light Plot for Guy's and St Thomas' NHS Foundation Trust (NAoPri)",
x = "Quarter Year",
y = "Relative Score (MAV / MAV_NAT)") +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +  # Show as percentage, starting at 0
facet_grid(metric_name ~ ., scales = "free_y")  # Stack plots vertically by metric_name
# For the performance indicator "People recorded as having an immediate reconstruction following a mastectomy"
# at Guy's and St Thomas' NHS Foundation Trust, the performance at the trust is almost 100% better than the
# national average, that's why it's showing a relative score of 200%. The relative score does not necessarily run
# from a range of 0-100%, it can be anything as it is relative.
# Filter data for NBOCA (Bowel Cancer) for Guy's and St Thomas' NHS Foundation Trust
traffic_light_data <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NBOCA") %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
mutate(relative_score = mav / mav_nat,  # Calculate relative score
traffic_light = case_when(
relative_score >= 0.9 & relative_score <= 1.1 ~ "Yellow",
relative_score > 1.1 ~ "Green",
relative_score < 0.9 ~ "Red"
))
# Traffic light plot for multiple performance indicators for NBOCA
ggplot(traffic_light_data, aes(x = quarter_year, y = relative_score, color = traffic_light)) +
geom_point(size = 3) +
scale_color_manual(values = c("Red" = "red", "Yellow" = "yellow", "Green" = "green")) +  # Assign custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
legend.position = "bottom",  # Place legend at bottom
legend.title = element_blank()) +  # Remove legend title
labs(title = "Traffic Light Plot for Guy's and St Thomas' NHS Foundation Trust (NBOCA)",
x = "Quarter Year",
y = "Relative Score (MAV / MAV_NAT)") +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +  # Show as percentage, starting at 0
facet_wrap(~ metric_name, scales = "free_y", ncol = 2)
# Filter data for NAoMe (Metastatic Breast Cancer) for Guy's and St Thomas' NHS Foundation Trust
traffic_light_data <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NAoMe") %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
mutate(relative_score = mav / mav_nat,  # Calculate relative score
traffic_light = case_when(
relative_score >= 0.9 & relative_score <= 1.1 ~ "Yellow",
relative_score > 1.1 ~ "Green",
relative_score < 0.9 ~ "Red"
))
# Traffic light plot for multiple performance indicators (2x2 grid) for NAoMe
ggplot(traffic_light_data, aes(x = quarter_year, y = relative_score, color = traffic_light)) +
geom_point(size = 3) +
scale_color_manual(values = c("Red" = "red", "Yellow" = "yellow", "Green" = "green")) +  # Assign custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
legend.position = "bottom",  # Place legend at bottom
legend.title = element_blank()) +  # Remove legend title
labs(title = "Traffic Light Plot for Guy's and St Thomas' NHS Foundation Trust (NAoMe)",
x = "Quarter Year",
y = "Relative Score (MAV / MAV_NAT)") +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +  # Show as percentage, starting at 0
facet_wrap(~ metric_name, scales = "free_y", ncol = 2)  # Arrange plots in a 2x2 grid
# Filter data for NOGCA (Oesophago-Gastric Cancer) for Guy's and St Thomas' NHS Foundation Trust
traffic_light_data <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NOGCA") %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
mutate(relative_score = mav / mav_nat,  # Calculate relative score
traffic_light = case_when(
relative_score >= 0.9 & relative_score <= 1.1 ~ "Yellow",
relative_score > 1.1 ~ "Green",
relative_score < 0.9 ~ "Red"
))
# Traffic light plot for multiple performance indicators (2x2 grid) for NOGCA
ggplot(traffic_light_data, aes(x = quarter_year, y = relative_score, color = traffic_light)) +
geom_point(size = 3) +
scale_color_manual(values = c("Red" = "red", "Yellow" = "yellow", "Green" = "green")) +  # Assign custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
legend.position = "bottom",  # Place legend at bottom
legend.title = element_blank()) +  # Remove legend title
labs(title = "Traffic Light Plot for Guy's and St Thomas' NHS Foundation Trust (NOGCA)",
x = "Quarter Year",
y = "Relative Score (MAV / MAV_NAT)") +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +  # Show as percentage, starting at 0
facet_wrap(~ metric_name, scales = "free_y", ncol = 2)  # Arrange plots in a 2x2 grid
library(dplyr)
library(ggplot2)
# Filter data for NOCA (Ovarian Cancer) for Guy's and St Thomas' NHS Foundation Trust
traffic_light_data <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NOCA") %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
mutate(relative_score = mav / mav_nat,  # Calculate relative score
traffic_light = case_when(
relative_score >= 0.9 & relative_score <= 1.1 ~ "Yellow",
relative_score > 1.1 ~ "Green",
relative_score < 0.9 ~ "Red"
))
# Traffic light plot for multiple performance indicators (2x2 grid) for NOCA
ggplot(traffic_light_data, aes(x = quarter_year, y = relative_score, color = traffic_light)) +
geom_point(size = 3) +
scale_color_manual(values = c("Red" = "red", "Yellow" = "yellow", "Green" = "green")) +  # Assign custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
legend.position = "bottom",  # Place legend at bottom
legend.title = element_blank()) +  # Remove legend title
labs(title = "Traffic Light Plot for Guy's and St Thomas' NHS Foundation Trust (NOCA)",
x = "Quarter Year",
y = "Relative Score (MAV / MAV_NAT)") +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +  # Show as percentage, starting at 0
facet_wrap(~ metric_name, scales = "free_y", ncol = 2)  # Arrange plots in a 2x2 grid
# Filter data for NOCA (Ovarian Cancer) for Guy's and St Thomas' NHS Foundation Trust
traffic_light_data <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NOCA") %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
mutate(relative_score = mav / mav_nat,  # Calculate relative score
traffic_light = case_when(
relative_score >= 0.9 & relative_score <= 1.1 ~ "Yellow",
relative_score > 1.1 ~ "Green",
relative_score < 0.9 ~ "Red"
))
# Traffic light plot for multiple performance indicators (2x2 grid) for NOCA
ggplot(traffic_light_data, aes(x = quarter_year, y = relative_score, color = traffic_light)) +
geom_point(size = 3) +
scale_color_manual(values = c("Red" = "red", "Yellow" = "yellow", "Green" = "green")) +  # Assign custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
legend.position = "bottom",  # Place legend at bottom
legend.title = element_blank()) +  # Remove legend title
labs(title = "Traffic Light Plot for Guy's and St Thomas' NHS Foundation Trust (NOCA)",
x = "Quarter Year",
y = "Relative Score (MAV / MAV_NAT)") +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +  # Show as percentage, starting at 0
facet_wrap(~ metric_name, scales = "free_y", ncol = 2)  # Arrange plots in a 2x2 grid
# Filter data for NPaCA (Pancreatic Cancer) for Guy's and St Thomas' NHS Foundation Trust
traffic_light_data <- Indicators_trust %>%
filter(trust_name %in% c("Guys and St Thomas NHS Foundation Trust", "Guy's and St Thomas' NHS Foundation Trust"),
audit == "NPaCA") %>%
select(audit, quarter_year, metric_name, mav, mav_nat) %>%
mutate(relative_score = mav / mav_nat,  # Calculate relative score
traffic_light = case_when(
relative_score >= 0.9 & relative_score <= 1.1 ~ "Yellow",
relative_score > 1.1 ~ "Green",
relative_score < 0.9 ~ "Red"
))
# Traffic light plot for multiple performance indicators (2x2 grid) for NPaCA
ggplot(traffic_light_data, aes(x = quarter_year, y = relative_score, color = traffic_light)) +
geom_point(size = 3) +
scale_color_manual(values = c("Red" = "red", "Yellow" = "yellow", "Green" = "green")) +  # Assign custom colors
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
legend.position = "bottom",  # Place legend at bottom
legend.title = element_blank()) +  # Remove legend title
labs(title = "Traffic Light Plot for Guy's and St Thomas' NHS Foundation Trust (NPaCA)",
x = "Quarter Year",
y = "Relative Score (MAV / MAV_NAT)") +
scale_y_continuous(labels = scales::percent, limits = c(0, NA)) +  # Show as percentage, starting at 0
facet_wrap(~ metric_name, scales = "free_y", ncol = 2)  # Arrange plots in a 2x2 grid
